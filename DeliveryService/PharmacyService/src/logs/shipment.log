2023-01-15 18:21:29,646 MENU_LOG TEST_LOGGER [main] Hello world!
2023-01-16 17:15:03,906 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-16 17:15:03,907 MENU_LOG TEST_LOGGER [main] []
2023-01-16 17:16:57,064 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-16 17:16:57,066 MENU_LOG TEST_LOGGER [main] []
2023-01-16 17:17:39,366 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-16 17:17:39,368 MENU_LOG TEST_LOGGER [main] []
2023-01-16 17:21:40,427 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'id' in 'where clause'
2023-01-16 17:21:40,429 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@5c87bfe2
2023-01-16 17:22:36,006 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'id' in 'where clause'
2023-01-16 17:22:36,007 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@5c87bfe2
2023-01-16 17:24:32,610 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'id' in 'where clause'
2023-01-16 17:24:32,611 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@5c87bfe2
2023-01-16 17:25:45,686 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'id' in 'where clause'
2023-01-16 17:25:45,687 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@5c87bfe2
2023-01-16 17:25:57,466 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'id' in 'where clause'
2023-01-16 17:25:57,468 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@5c87bfe2
2023-01-16 17:27:12,619 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 17:27:12,620 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@f73dcd6
2023-01-16 17:28:33,155 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 17:28:33,156 MENU_LOG TEST_LOGGER [main] []
2023-01-16 18:43:38,465 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 18:43:38,467 MENU_LOG TEST_LOGGER [main] []
2023-01-16 18:43:38,468 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 18:43:38,468 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,387 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,389 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,391 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,391 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,393 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,393 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,394 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,394 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,396 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,396 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,398 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,398 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,399 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,399 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,400 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,400 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,402 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,402 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,403 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,403 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,404 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,404 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,406 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,406 MENU_LOG TEST_LOGGER [main] []
2023-01-16 21:20:14,407 ERROR TEST_LOGGER [main] java.sql.SQLException: No database selected
2023-01-16 21:20:14,407 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,856 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,858 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,861 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,861 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,865 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,866 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,875 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,875 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,878 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,878 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,881 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,881 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,884 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,884 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,887 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,887 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,889 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,889 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,893 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,893 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,895 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,895 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,898 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,898 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:10:38,901 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:10:38,901 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,483 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 10:12:07,485 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,487 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,487 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,489 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,489 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,491 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,491 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,493 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,493 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,495 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,496 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,497 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,497 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,499 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,499 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,501 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,501 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,503 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,503 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,504 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,505 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,506 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,506 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:07,509 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:07,509 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,708 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 10:12:41,708 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,708 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,708 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,708 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,708 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,723 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,723 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:12:41,739 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:12:41,739 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,277 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 10:54:12,279 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,281 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,281 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,283 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,283 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,284 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,285 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,286 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,287 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,289 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,289 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,290 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,290 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,292 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,292 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,294 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,294 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,295 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,295 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,297 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,297 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,299 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,299 MENU_LOG TEST_LOGGER [main] []
2023-01-17 10:54:12,301 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 10:54:12,301 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,296 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,298 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,301 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,301 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,304 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,304 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,306 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,306 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,308 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,308 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,311 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,311 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,312 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,313 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,314 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,314 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,316 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,316 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,318 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,318 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,321 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,321 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,323 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,323 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:31:45,326 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:31:45,326 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,595 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:34:16,596 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,598 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,599 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,600 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,600 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,603 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,603 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,604 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,604 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,606 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,606 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,608 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,608 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,610 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,610 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,611 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,611 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,614 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,614 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,615 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,615 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,617 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,617 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:34:16,619 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:34:16,619 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,437 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:50:43,440 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,443 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,443 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,445 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,446 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,448 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,448 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,451 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,451 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,454 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,454 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,457 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,457 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,459 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,459 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,461 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,461 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,463 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,463 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,466 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,466 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,468 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,469 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:50:43,471 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:50:43,471 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:24,989 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:51:24,990 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:24,993 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:24,993 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:24,995 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:24,995 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:24,997 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:24,997 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:24,999 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:24,999 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,001 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,001 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,003 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,003 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,005 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,005 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,006 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,006 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,009 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,009 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,010 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,010 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,012 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,012 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:51:25,014 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:51:25,014 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,072 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:52:00,073 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,076 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,076 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,077 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,078 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,079 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,079 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,081 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,081 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,082 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,083 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,084 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,084 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,086 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,086 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,088 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,088 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,089 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,089 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,091 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,091 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,093 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,093 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:52:00,095 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:52:00,095 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,946 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:54:15,948 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,950 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,950 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,951 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,951 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,954 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,954 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,957 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,957 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,959 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,959 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,961 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,961 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,962 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,963 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,964 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,964 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,966 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,966 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,968 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,968 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,970 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,970 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:15,971 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:15,972 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,916 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:54:59,921 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,926 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:59,927 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,933 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:59,933 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,938 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:59,938 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,943 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:59,943 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,949 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:59,950 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,955 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:59,955 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:54:59,962 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:54:59,962 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,635 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:55:20,636 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,639 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,639 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,641 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,642 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,643 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,643 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,645 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,646 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,648 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,648 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,650 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,650 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,651 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,651 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,653 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,653 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,655 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,655 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,657 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,657 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,659 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,659 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:20,660 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:20,660 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:38,879 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:55:45,056 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:55:59,447 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,450 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,450 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,452 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,452 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,454 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,454 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,457 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,457 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,459 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,459 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,462 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,462 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,464 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,464 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,465 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,465 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,467 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,467 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,468 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,468 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,470 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,470 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:55:59,473 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:55:59,473 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:56:19,134 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:57:09,853 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,857 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,857 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,859 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,860 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,863 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,863 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,865 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,865 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,868 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,868 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,869 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,869 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,872 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,873 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,874 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,874 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,877 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,877 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,878 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,879 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,881 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,881 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:09,883 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:09,883 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:30,139 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 11:57:44,980 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,818 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,819 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,823 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,823 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,828 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,828 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,834 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,834 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,838 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,840 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,843 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,844 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,848 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,849 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,852 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,852 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,856 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,857 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,861 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,861 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,866 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,866 MENU_LOG TEST_LOGGER [main] []
2023-01-17 11:57:50,870 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 11:57:50,870 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,013 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 17:08:37,015 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,017 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,017 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,019 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,019 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,021 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,021 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,022 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,023 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,024 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,025 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,026 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,026 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,028 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,028 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,030 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,030 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,031 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,031 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,033 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,033 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,035 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,035 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:08:37,037 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:08:37,037 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,782 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,784 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,786 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,786 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,788 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,788 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,790 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,790 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,792 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,792 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,793 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,794 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,795 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,795 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,797 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,797 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,798 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,798 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,800 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,800 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,802 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,802 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,804 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,805 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:10:51,807 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:10:51,807 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,257 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 17:11:55,258 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,261 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,261 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,263 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,263 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,264 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,265 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,266 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,266 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,268 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,268 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,270 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,270 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,271 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,271 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,272 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,273 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,274 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,274 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,276 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,276 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,279 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,279 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:11:55,281 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:11:55,281 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:06,896 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 17:12:08,453 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:09,745 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:10,109 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,273 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,274 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,279 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,279 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,285 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,285 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,290 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,290 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,294 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,294 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,298 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,298 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,302 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,302 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,306 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,306 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,310 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,310 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,314 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,314 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:12:17,319 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:12:17,319 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:13:06,586 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 17:13:10,868 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:13:15,725 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:13:15,726 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:13:15,731 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:13:15,731 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:23,193 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 17:14:35,820 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:36,651 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:36,677 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:36,741 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:36,770 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:36,838 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:36,865 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:37,631 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:37,655 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:37,736 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:37,764 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:37,832 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:37,857 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:37,941 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:37,965 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:38,033 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:38,325 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:38,872 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:39,116 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:39,543 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:39,908 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:40,352 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:40,557 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:14:40,998 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:14:41,228 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,306 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 17:15:15,307 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,310 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,310 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,312 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,312 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,313 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,313 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,315 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,315 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,317 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,317 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,319 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,319 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,320 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,321 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,322 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,322 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,323 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,324 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,325 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,325 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,327 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,327 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:15:15,329 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:15:15,329 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:49,169 ERROR TEST_LOGGER [main] java.sql.SQLException: Before start of result set
2023-01-17 17:17:49,174 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:49,177 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:49,177 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:49,179 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:49,179 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:49,181 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:49,181 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:49,183 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:49,183 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:49,186 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:49,186 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,219 MENU_LOG TEST_LOGGER [main] [com.solvd.pharmacyservice.models.Customer@6b9ce1bf]
2023-01-17 17:17:50,223 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,224 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,226 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,226 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,228 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,228 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,229 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,229 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,231 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,231 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,233 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,233 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,235 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,235 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,236 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,236 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,238 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,238 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,239 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,239 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,241 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,241 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:17:50,243 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:17:50,243 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,173 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@6b9ce1bf
2023-01-17 17:19:09,178 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,178 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,180 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,180 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,182 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,182 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,184 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,184 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,186 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,186 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,187 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,188 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,189 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,189 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,191 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,191 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,192 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,192 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,194 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,194 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,195 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,196 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:19:09,197 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:19:09,198 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,634 MENU_LOG TEST_LOGGER [main] [com.solvd.pharmacyservice.models.Customer@6b9ce1bf]
2023-01-17 17:26:47,637 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,638 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,640 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,641 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,642 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,644 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,645 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,647 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,648 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,649 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,652 ERROR TEST_LOGGER [main] java.sql.SQLException: Illegal operation on empty result set.
2023-01-17 17:26:47,652 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:26:47,653 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,510 MENU_LOG TEST_LOGGER [main] [com.solvd.pharmacyservice.models.Customer@6b9ce1bf]
2023-01-17 17:27:48,513 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,515 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,516 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,518 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,519 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,521 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,522 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,524 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,525 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,526 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,528 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:27:48,529 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,929 MENU_LOG TEST_LOGGER [main] com.solvd.pharmacyservice.models.Customer@4fc5e095
2023-01-17 17:28:25,932 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,934 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,935 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,937 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,938 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,940 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,941 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,942 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,943 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,945 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,946 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:25,948 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,072 MENU_LOG TEST_LOGGER [main] 1
2023-01-17 17:28:46,075 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,077 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,078 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,079 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,081 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,082 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,083 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,084 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,085 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,087 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,088 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:28:46,089 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,293 MENU_LOG TEST_LOGGER [main] 22
2023-01-17 17:29:03,297 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,299 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,300 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,302 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,303 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,305 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,306 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,307 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,309 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,310 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,312 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:03,313 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,669 MENU_LOG TEST_LOGGER [main] 12 easy street
2023-01-17 17:29:23,674 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,676 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,678 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,681 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,682 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,684 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,686 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,687 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,689 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,691 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,693 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:23,695 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,180 MENU_LOG TEST_LOGGER [main] Tom
2023-01-17 17:29:42,183 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,185 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,186 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,188 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,189 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,191 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,192 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,194 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,195 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,197 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,198 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:42,200 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,346 MENU_LOG TEST_LOGGER [main] Sawyer
2023-01-17 17:29:56,350 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,351 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,352 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,354 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,355 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,357 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,358 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,359 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,360 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,362 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,363 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:29:56,364 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,349 MENU_LOG TEST_LOGGER [main] [Customer{customerId=1, firstName='Tom', lastName='Sawyer', phoneNumber='2342345675', age=22, address='12 easy street'}]
2023-01-17 17:32:36,352 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,354 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,355 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,356 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,358 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,359 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,361 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,362 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,364 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,365 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,366 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:32:36,368 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,809 MENU_LOG TEST_LOGGER [main] [Customer ID=1, First Name='Tom', Last Name='Sawyer', Phone Number='2342345675', Age=22, Address='12 easy street'}]
2023-01-17 17:34:39,812 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,813 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,815 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,816 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,817 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,818 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,820 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,822 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,823 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,824 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,826 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:34:39,827 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,086 MENU_LOG TEST_LOGGER [main] [Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street]
2023-01-17 17:35:45,090 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,092 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,094 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,096 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,097 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,099 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,100 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,102 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,103 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,105 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,106 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:35:45,108 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,762 MENU_LOG TEST_LOGGER [main] [Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street, Customer ID = 5, First Name = 'Tom', Last Name = 'Jackson', Phone Number = '6541231234', Age = 21, Address = 'Road]
2023-01-17 17:36:20,766 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,767 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,769 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,770 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,771 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,773 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,775 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,776 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,777 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,779 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,780 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:20,781 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,725 MENU_LOG TEST_LOGGER [main] [Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street, Customer ID = 5, First Name = 'Tom', Last Name = 'Jackson', Phone Number = '6541231234', Age = 21, Address = 'Road]
2023-01-17 17:36:35,728 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,729 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,731 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,732 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,733 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,735 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,736 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,737 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,738 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,740 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,741 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:36:35,742 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,284 MENU_LOG TEST_LOGGER [main] [Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street
, Customer ID = 5, First Name = 'Tom', Last Name = 'Jackson', Phone Number = '6541231234', Age = 21, Address = 'Road
]
2023-01-17 17:37:22,286 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,288 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,289 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,290 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,291 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,293 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,294 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,295 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,296 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,298 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,299 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:37:22,300 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,367 MENU_LOG TEST_LOGGER [main] [Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street
]
2023-01-17 17:39:11,370 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,371 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,372 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,374 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,375 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,376 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,377 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,379 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,380 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,381 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,383 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:39:11,384 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,928 MENU_LOG TEST_LOGGER [main] [Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street
, Customer ID = 2, First Name = 'Sam', Last Name = 'Darnold', Phone Number = '1234567890', Age = 0, Address = '200 NFL Road
]
2023-01-17 17:42:51,931 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,933 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,934 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,935 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,937 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,938 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,939 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,940 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,941 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,942 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,944 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:42:51,945 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,202 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-17 17:43:46,209 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street', 
Customer ID = 2, First Name = 'Sam', Last Name = 'Darnold', Phone Number = '1234567890', Age = 0, Address = '200 NFL Road']
2023-01-17 17:43:46,212 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,213 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,215 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,216 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,218 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,219 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,221 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,222 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,224 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,225 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,227 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:43:46,229 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,644 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-17 17:44:16,648 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street', 
Customer ID = 2, First Name = 'Sam', Last Name = 'Darnold', Phone Number = '1234567890', Age = 0, Address = '200 NFL Road']
2023-01-17 17:44:16,651 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,652 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,653 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,655 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,656 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,657 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,659 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,660 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,661 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,662 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,663 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:16,665 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,754 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-17 17:44:51,759 ERROR TEST_LOGGER [main] com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Truncated incorrect DOUBLE value: '200 NFL Road'
2023-01-17 17:44:51,764 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street', 
Customer ID = 2, First Name = 'Sam', Last Name = 'Darnold', Phone Number = '1234567890', Age = 0, Address = '200 NFL Road']
2023-01-17 17:44:51,766 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,767 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,769 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,771 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,772 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,773 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,774 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,776 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,777 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,778 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,779 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:44:51,781 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,663 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-17 17:45:17,666 ERROR TEST_LOGGER [main] com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Truncated incorrect DOUBLE value: '200 NFL Road'
2023-01-17 17:45:17,671 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street', 
Customer ID = 2, First Name = 'Sam', Last Name = 'Darnold', Phone Number = '1234567890', Age = 0, Address = '200 NFL Road']
2023-01-17 17:45:17,673 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,675 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,677 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,678 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,680 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,681 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,682 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,683 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,685 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,686 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,688 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:17,689 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,392 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street', 
Customer ID = 2, First Name = 'Sam', Last Name = 'Darnold', Phone Number = '1234567890', Age = 0, Address = '200 NFL Road']
2023-01-17 17:45:44,395 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,397 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,398 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,399 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,401 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,402 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,403 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,404 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,406 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,407 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,408 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:45:44,410 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,229 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street', 
Customer ID = 2, First Name = 'Sam', Last Name = 'Darnold', Phone Number = '1234567890', Age = 0, Address = '200 NFL Road']
2023-01-17 17:47:04,232 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,233 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,234 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,235 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,237 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,238 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,239 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,240 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,242 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,243 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,244 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:04,245 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,101 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,104 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,106 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,107 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,109 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,110 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,111 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,112 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,113 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,114 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,116 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,117 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:47:53,119 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,812 ERROR TEST_LOGGER [main] com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Truncated incorrect DOUBLE value: '12 Mac Road'
2023-01-17 17:52:28,817 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Andrews', Phone Number = '2342345675', Age = 19, Address = '12 Mac Road']
2023-01-17 17:52:28,819 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,821 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,822 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,823 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,825 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,826 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,827 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,828 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,829 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,830 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,832 MENU_LOG TEST_LOGGER [main] []
2023-01-17 17:52:28,833 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,429 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-17 18:05:06,438 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Andrews', Phone Number = '2342345675', Age = 25, Address = '12 Mac Road']
2023-01-17 18:05:06,439 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,441 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,442 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,444 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,445 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,446 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,448 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,449 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,450 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,452 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,453 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:06,454 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,952 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Andrews', Phone Number = '2342345675', Age = 25, Address = '12 Mac Road']
2023-01-17 18:05:27,955 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,957 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,958 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,960 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,961 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,963 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,964 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,966 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,967 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,968 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,970 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:05:27,971 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,158 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,161 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,163 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,164 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,166 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,167 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,168 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,169 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,171 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,172 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,173 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,174 MENU_LOG TEST_LOGGER [main] []
2023-01-17 18:06:01,176 MENU_LOG TEST_LOGGER [main] []
2023-01-18 19:02:26,841 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street']
2023-01-18 19:03:00,648 MENU_LOG TEST_LOGGER [main] 
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street'
2023-01-18 19:03:07,636 MENU_LOG TEST_LOGGER [main] 
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street'
2023-01-18 20:52:37,242 MENU_LOG TEST_LOGGER [main] 
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street'
2023-01-18 20:52:37,246 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,248 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,249 MENU_LOG TEST_LOGGER [main] [com.solvd.pharmacyservice.models.Employee@3f053c80]
2023-01-18 20:52:37,251 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,252 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,254 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,255 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,256 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,258 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,259 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,261 MENU_LOG TEST_LOGGER [main] []
2023-01-18 20:52:37,262 MENU_LOG TEST_LOGGER [main] [com.solvd.pharmacyservice.models.EmployeeType@45cff11c, com.solvd.pharmacyservice.models.EmployeeType@207ea13]
2023-01-18 21:06:45,264 MENU_LOG TEST_LOGGER [main] 
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street'
2023-01-18 21:06:45,267 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,269 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,271 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Antonio', Last Name = 'Justin', Employee Number = '1234567', Employee Type ID = 2]
2023-01-18 21:06:45,272 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,273 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,275 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,276 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,277 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,279 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,280 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,282 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:06:45,284 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type = 'Pharmacist', 
Employee Type ID = 2, Employee Type = 'Clerk']
2023-01-18 21:08:19,793 MENU_LOG TEST_LOGGER [main] 
Customer ID = 1, First Name = 'Tom', Last Name = 'Sawyer', Phone Number = '2342345675', Age = 22, Address = '12 easy street'
2023-01-18 21:08:19,796 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,798 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,799 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Antonio', Last Name = 'Justin', Employee Number = '1234567', Employee Type ID = 2]
2023-01-18 21:08:19,801 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,802 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,804 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,805 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,806 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,808 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,809 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,810 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:08:19,812 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type = 'Pharmacist', 
Employee Type ID = 2, Employee Type = 'Clerk']
2023-01-18 21:09:50,082 MENU_LOG TEST_LOGGER [main] 
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-18 21:09:50,086 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,088 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,091 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,093 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,094 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,095 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,097 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,098 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,099 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,101 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,102 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:09:50,106 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,532 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,535 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,537 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,539 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,540 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,542 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,543 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,545 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,546 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,548 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,549 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,551 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:32,554 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,376 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,380 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,382 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,383 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,385 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,386 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,388 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,389 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,390 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,392 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,393 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,394 MENU_LOG TEST_LOGGER [main] []
2023-01-18 21:10:55,396 MENU_LOG TEST_LOGGER [main] []
2023-01-19 21:35:07,108 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Column 'address' cannot be null
2023-01-19 21:35:07,132 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '1234567864', Age = 24, Address = '50 Adams Road']
2023-01-19 21:35:07,137 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 0, Employee Type = 'null'
2023-01-19 21:35:07,147 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-19 21:35:07,148 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-19 21:35:07,153 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-19 21:35:07,155 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-19 21:35:07,157 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-19 21:35:07,159 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-19 21:35:07,169 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-19 21:35:07,169 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-19 21:35:07,177 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-19 21:35:07,178 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'where clause'
2023-01-19 21:35:07,179 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 0, Payment Type = 'null'
2023-01-19 21:35:07,185 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-19 21:35:07,186 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 21:35:07,196 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-19 21:35:07,198 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 21:41:01,552 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-19 21:41:01,559 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Column 'address' cannot be null
2023-01-19 21:41:01,572 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '1234567864', Age = 24, Address = '50 Adams Road']
2023-01-19 21:41:01,578 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 2, Employee Type = 'Doctor'
2023-01-19 21:42:07,824 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-19 21:42:07,831 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Column 'address' cannot be null
2023-01-19 21:42:07,846 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '1234567864', Age = 24, Address = '50 Adams Road']
2023-01-19 21:42:07,850 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:43:16,666 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Column 'address' cannot be null
2023-01-19 21:43:16,681 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '1234567864', Age = 24, Address = '50 Adams Road']
2023-01-19 21:43:16,683 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:44:19,748 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '1234567864', Age = 24, Address = '50 Adams Road', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 21:44:19,755 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 21:47:40,933 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-19 21:47:40,938 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-19 21:47:40,951 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-19 21:47:40,953 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-19 21:47:50,180 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-19 21:47:50,184 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-19 21:51:32,811 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-19 21:51:32,823 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '1234567864', Age = 24, Address = '50 Adams Road', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 21:51:32,825 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 21:51:32,826 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 21:51:32,871 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '1234567864', Age = 24, Address = '50 Adams Road', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 21:51:32,872 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:51:32,873 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:52:15,413 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 21:52:15,417 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 21:52:15,419 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 21:52:15,423 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 21:52:15,424 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:52:15,425 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:53:50,271 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 21:53:50,276 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 21:53:50,277 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 21:53:50,284 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:53:50,286 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-19 21:57:10,957 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-19 21:57:10,961 MENU_LOG TEST_LOGGER [main] Testing out id 
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-19 21:57:10,963 MENU_LOG TEST_LOGGER [main] Testing out name 
Employee Type ID = 2, Employee Type = 'Doctor'
2023-01-19 21:57:10,970 MENU_LOG TEST_LOGGER [main] Testing out id 
Employee Type ID = 0, Employee Type = 'null'
2023-01-19 21:57:10,972 MENU_LOG TEST_LOGGER [main] Testing out name 
Employee Type ID = 0, Employee Type = 'null'
2023-01-19 21:59:51,641 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'category.PRIMARY'
2023-01-19 21:59:51,648 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'category.PRIMARY'
2023-01-19 21:59:51,662 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-19 21:59:51,665 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 21:59:51,667 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-19 21:59:51,703 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`inventory`, CONSTRAINT `fk_inventory_category1` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`))
2023-01-19 21:59:51,707 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`inventory`, CONSTRAINT `fk_inventory_category1` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`))
2023-01-19 21:59:51,709 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 21:59:51,711 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-19 22:03:48,515 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`inventory`, CONSTRAINT `fk_inventory_category1` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`))
2023-01-19 22:03:48,523 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`inventory`, CONSTRAINT `fk_inventory_category1` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`))
2023-01-19 22:08:53,414 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-19 22:08:53,420 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 22:08:53,422 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-19 22:08:53,435 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-19 22:08:53,437 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 22:08:53,440 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 22:09:39,791 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-19 22:09:39,797 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 22:09:39,800 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-19 22:09:39,814 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-19 22:09:39,817 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 22:09:39,819 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 22:09:39,840 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 0, Medicine Name = 'null', Amount Left = 0, Amount Taken = 0, Category ID = 0, Price Of Medicine = 0.0
2023-01-19 22:09:39,843 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 0, Medicine Name = 'null', Amount Left = 0, Amount Taken = 0, Category ID = 0, Price Of Medicine = 0.0
2023-01-19 22:09:39,845 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 0, Category Name = 'null'
2023-01-19 22:09:39,847 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-19 22:25:58,462 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 22:25:58,469 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 22:25:58,471 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 22:25:58,484 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-19 22:25:58,486 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 22:25:58,489 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-19 22:25:58,508 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-19 22:25:58,511 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-19 22:25:58,514 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-19 22:25:58,515 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'where clause'
2023-01-19 22:25:58,516 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 0, Payment Type = 'null'
2023-01-19 22:25:58,518 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-19 22:25:58,530 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-19 22:25:58,532 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 22:25:58,534 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-19 22:26:50,746 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-19 22:26:50,752 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-19 22:26:50,766 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 22:26:50,769 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 22:26:50,771 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 22:26:50,777 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'category.PRIMARY'
2023-01-19 22:26:50,780 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'category.PRIMARY'
2023-01-19 22:26:50,782 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-19 22:26:50,783 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 22:26:50,787 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-19 22:26:50,791 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-19 22:26:50,794 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-19 22:26:50,796 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-19 22:26:50,798 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'where clause'
2023-01-19 22:26:50,798 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 0, Payment Type = 'null'
2023-01-19 22:26:50,799 MENU_LOG TEST_LOGGER [main] Testing out name
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-19 22:26:50,804 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'inventory.PRIMARY'
2023-01-19 22:26:50,806 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'inventory.PRIMARY'
2023-01-19 22:26:50,808 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-19 22:26:50,810 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 22:26:50,812 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-19 22:28:21,955 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-19 22:28:21,960 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-19 22:28:21,969 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-19 22:28:21,971 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 22:28:21,973 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-19 22:28:21,976 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'category.PRIMARY'
2023-01-19 22:28:21,978 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'category.PRIMARY'
2023-01-19 22:28:21,979 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-19 22:28:21,980 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-19 22:28:21,982 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-19 22:28:21,986 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-19 22:28:21,987 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-19 22:28:21,989 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-19 22:28:21,990 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-19 22:28:21,991 MENU_LOG TEST_LOGGER [main] Testing out name
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-19 22:28:21,995 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'inventory.PRIMARY'
2023-01-19 22:28:21,996 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'inventory.PRIMARY'
2023-01-19 22:28:21,998 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-19 22:28:22,000 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-19 22:28:22,001 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-19 22:35:46,646 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer_order.PRIMARY'
2023-01-19 22:37:00,304 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer_order.PRIMARY'
2023-01-19 22:37:07,927 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer_order.PRIMARY'
2023-01-20 08:14:18,842 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Column 'order_date' cannot be null
2023-01-20 08:14:18,850 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1]
2023-01-20 08:14:18,851 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:14:18,851 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:15:58,579 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 08:15:58,581 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:15:58,582 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:56:41,283 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-20 08:56:41,285 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-20 08:56:41,289 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 08:56:41,290 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 08:56:41,290 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 08:56:41,303 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 08:56:41,304 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 08:56:41,305 ERROR TEST_LOGGER [main] java.sql.SQLException: No value specified for parameter 6
2023-01-20 08:56:41,305 ERROR TEST_LOGGER [main] java.sql.SQLException: No value specified for parameter 6
2023-01-20 08:56:41,309 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 08:56:41,310 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 08:56:41,312 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 08:56:41,313 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 08:56:41,317 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 08:56:41,317 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 08:56:41,318 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 08:56:41,318 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 08:56:41,324 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'examination_type.PRIMARY'
2023-01-20 08:56:41,324 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'examination_type.PRIMARY'
2023-01-20 08:56:41,325 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 08:56:41,325 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 08:56:41,326 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 08:56:41,327 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-20 08:56:41,328 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-20 08:56:41,328 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 08:56:41,329 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 08:56:41,329 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 08:56:41,336 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 08:56:41,337 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 08:56:41,337 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 08:56:41,342 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'category.PRIMARY'
2023-01-20 08:56:41,342 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'category.PRIMARY'
2023-01-20 08:56:41,343 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 08:56:41,343 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 08:56:41,344 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 08:56:41,345 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'inventory.PRIMARY'
2023-01-20 08:56:41,346 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'inventory.PRIMARY'
2023-01-20 08:56:41,347 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 08:56:41,347 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 08:56:41,348 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 08:56:41,358 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 08:56:41,358 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:56:41,359 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:58:23,600 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-20 08:58:23,602 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-20 08:58:23,607 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 08:58:23,607 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 08:58:23,608 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 08:58:23,609 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-20 08:58:23,610 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-20 08:58:23,610 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 08:58:23,611 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 08:58:23,612 ERROR TEST_LOGGER [main] java.sql.SQLException: No value specified for parameter 6
2023-01-20 08:58:23,612 ERROR TEST_LOGGER [main] java.sql.SQLException: No value specified for parameter 6
2023-01-20 08:58:23,613 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 08:58:23,614 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 08:58:23,615 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 08:58:23,615 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 08:58:23,616 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 08:58:23,616 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 08:58:23,617 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 08:58:23,617 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 08:58:23,618 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'examination_type.PRIMARY'
2023-01-20 08:58:23,618 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'examination_type.PRIMARY'
2023-01-20 08:58:23,619 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 08:58:23,619 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 08:58:23,620 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 08:58:23,621 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-20 08:58:23,621 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-20 08:58:23,622 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 08:58:23,622 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 08:58:23,622 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 08:58:23,623 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'recipe.PRIMARY'
2023-01-20 08:58:23,624 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'recipe.PRIMARY'
2023-01-20 08:58:23,625 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 08:58:23,625 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 08:58:23,625 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 08:58:23,626 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'category.PRIMARY'
2023-01-20 08:58:23,627 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'category.PRIMARY'
2023-01-20 08:58:23,627 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 08:58:23,628 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 08:58:23,628 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 08:58:23,630 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'inventory.PRIMARY'
2023-01-20 08:58:23,630 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'inventory.PRIMARY'
2023-01-20 08:58:23,631 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 08:58:23,631 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 08:58:23,632 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 08:58:23,638 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer_order.PRIMARY'
2023-01-20 08:58:23,639 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer_order.PRIMARY'
2023-01-20 08:58:23,641 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 08:58:23,641 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:58:23,642 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 08:58:23,651 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 08:58:23,651 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 08:58:23,652 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 08:58:23,653 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 08:58:23,659 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`examination`, CONSTRAINT `fk_test_employee1` FOREIGN KEY (`employee_id`) REFERENCES `employee` (`employee_id`))
2023-01-20 08:58:23,660 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`examination`, CONSTRAINT `fk_test_employee1` FOREIGN KEY (`employee_id`) REFERENCES `employee` (`employee_id`))
2023-01-20 08:58:23,660 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 08:58:23,661 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 0, Exam Result = 'null', Employee ID = 0, Examination Type ID = 0, Customer ID = 0
2023-01-20 08:58:23,661 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'result' in 'where clause'
2023-01-20 08:58:23,661 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 0, Exam Result = 'null', Employee ID = 0, Examination Type ID = 0, Customer ID = 0
2023-01-20 09:02:02,714 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 09:02:02,716 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:02:02,717 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:02:02,721 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 09:02:02,722 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 09:02:02,726 ERROR TEST_LOGGER [main] java.sql.SQLException: No value specified for parameter 6
2023-01-20 09:02:02,726 ERROR TEST_LOGGER [main] java.sql.SQLException: No value specified for parameter 6
2023-01-20 09:02:02,727 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 09:02:02,728 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 09:02:02,731 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:02:02,732 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:02:02,732 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 09:02:02,733 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:02:02,733 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 09:02:02,733 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:02:02,736 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 09:02:02,736 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 09:02:02,737 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 09:02:02,739 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-20 09:02:02,740 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-20 09:02:02,740 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 09:02:02,740 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 09:02:02,741 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 09:02:02,743 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 09:02:02,744 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:02:02,744 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:02:02,747 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 09:02:02,747 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 09:02:02,748 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 09:02:02,752 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 09:02:02,753 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 09:02:02,753 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 09:02:02,763 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 09:02:02,764 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:02:02,765 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:02:02,770 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 09:02:02,771 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:02:02,772 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:02:02,772 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 09:03:31,297 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-20 09:03:31,300 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-20 09:03:31,304 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 09:03:31,304 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:03:31,305 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:03:31,306 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-20 09:03:31,307 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-20 09:03:31,307 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 09:03:31,309 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 09:03:31,314 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 2, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 3, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 09:03:31,314 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1
2023-01-20 09:03:31,316 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:03:31,316 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:03:31,316 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 09:03:31,317 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:03:31,317 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 09:03:31,317 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:03:31,318 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'examination_type.PRIMARY'
2023-01-20 09:03:31,319 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'examination_type.PRIMARY'
2023-01-20 09:03:31,319 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 09:03:31,320 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 09:03:31,320 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 09:03:31,321 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-20 09:03:31,322 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-20 09:03:31,322 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 09:03:31,323 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 09:03:31,323 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 09:03:31,324 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'recipe.PRIMARY'
2023-01-20 09:03:31,325 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'recipe.PRIMARY'
2023-01-20 09:03:31,325 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 09:03:31,326 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:03:31,326 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:03:31,327 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'category.PRIMARY'
2023-01-20 09:03:31,327 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'category.PRIMARY'
2023-01-20 09:03:31,328 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 09:03:31,329 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 09:03:31,329 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 09:03:31,330 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'inventory.PRIMARY'
2023-01-20 09:03:31,331 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'inventory.PRIMARY'
2023-01-20 09:03:31,332 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 09:03:31,332 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 09:03:31,332 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 09:03:31,340 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer_order.PRIMARY'
2023-01-20 09:03:31,341 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer_order.PRIMARY'
2023-01-20 09:03:31,342 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 09:03:31,343 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:03:31,344 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:03:31,345 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'prescription.PRIMARY'
2023-01-20 09:03:31,346 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'prescription.PRIMARY'
2023-01-20 09:03:31,347 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 09:03:31,347 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:03:31,348 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:03:31,349 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 09:04:14,059 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-20 09:04:14,061 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-20 09:04:14,067 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 09:04:14,067 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:04:14,069 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:04:14,071 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-20 09:04:14,072 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-20 09:04:14,072 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 09:04:14,073 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 09:04:14,077 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 2, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 3, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 4, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 5, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 09:04:14,078 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1
2023-01-20 09:04:14,079 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:04:14,080 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:04:14,080 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 09:04:14,080 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:04:14,081 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 09:04:14,081 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:04:14,082 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'examination_type.PRIMARY'
2023-01-20 09:04:14,083 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'examination_type.PRIMARY'
2023-01-20 09:04:14,083 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 09:04:14,084 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 09:04:14,084 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 09:04:14,085 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-20 09:04:14,086 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-20 09:04:14,086 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 09:04:14,087 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 09:04:14,087 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 09:04:14,088 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'recipe.PRIMARY'
2023-01-20 09:04:14,089 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'recipe.PRIMARY'
2023-01-20 09:04:14,089 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 09:04:14,090 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:04:14,090 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:04:14,091 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'category.PRIMARY'
2023-01-20 09:04:14,092 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'category.PRIMARY'
2023-01-20 09:04:14,092 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 09:04:14,093 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 09:04:14,093 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 09:04:14,095 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'inventory.PRIMARY'
2023-01-20 09:04:14,096 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'inventory.PRIMARY'
2023-01-20 09:04:14,096 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 09:04:14,097 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 09:04:14,097 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 09:04:14,104 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer_order.PRIMARY'
2023-01-20 09:04:14,105 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer_order.PRIMARY'
2023-01-20 09:04:14,106 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 09:04:14,107 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:04:14,108 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:04:14,109 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'prescription.PRIMARY'
2023-01-20 09:04:14,110 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'prescription.PRIMARY'
2023-01-20 09:04:14,111 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 09:04:14,111 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:04:14,113 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:04:14,114 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 09:04:14,129 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 09:04:14,130 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 09:04:14,132 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 09:04:14,133 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 09:04:14,134 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'where clause'
2023-01-20 09:04:14,135 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'where clause'
2023-01-20 09:06:27,396 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 09:06:27,398 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:06:27,398 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:06:27,404 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-20 09:06:27,404 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-20 09:06:27,405 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 09:06:27,406 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 09:06:27,409 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 3, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 4, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 5, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 6, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 7, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 09:06:27,410 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 09:06:27,411 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:06:27,412 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:06:27,412 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 09:06:27,413 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:06:27,413 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 09:06:27,413 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:06:27,416 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 09:06:27,416 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 09:06:27,416 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 09:06:27,418 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-20 09:06:27,418 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-20 09:06:27,419 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 09:06:27,419 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 09:06:27,420 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 09:06:27,423 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 09:06:27,423 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:06:27,424 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:06:27,427 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 09:06:27,427 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 09:06:27,428 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 09:06:27,431 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 09:06:27,432 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 09:06:27,432 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 09:06:27,443 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 09:06:27,444 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:06:27,444 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:06:27,448 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 09:06:27,449 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:06:27,449 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:06:27,450 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 09:06:27,468 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 09:06:27,468 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 09:06:27,470 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'where clause'
2023-01-20 09:06:27,470 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'where clause'
2023-01-20 09:07:34,521 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 09:07:34,523 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:07:34,524 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 09:07:34,530 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-20 09:07:34,531 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-20 09:07:34,532 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 09:07:34,532 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 09:07:34,536 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 3, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 4, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 5, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 6, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 7, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 8, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 9, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 09:07:34,537 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 09:07:34,538 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:07:34,538 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 09:07:34,539 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 09:07:34,539 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:07:34,540 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 09:07:34,540 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 09:07:34,543 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 09:07:34,543 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 09:07:34,544 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 09:07:34,545 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'payment_type.PRIMARY'
2023-01-20 09:07:34,546 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'payment_type.PRIMARY'
2023-01-20 09:07:34,546 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 09:07:34,546 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 09:07:34,547 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 09:07:34,550 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 09:07:34,550 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:07:34,551 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 09:07:34,553 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 09:07:34,554 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 09:07:34,555 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 09:07:34,558 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 09:07:34,559 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 09:07:34,559 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 09:07:34,569 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 09:07:34,570 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:07:34,571 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 09:07:34,575 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 09:07:34,576 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:07:34,576 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 09:07:34,577 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 09:07:34,593 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 09:07:34,594 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 12:13:32,719 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 12:13:32,721 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:13:32,722 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:13:32,726 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 12:13:32,726 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 12:13:32,730 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 10, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 11, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 12:13:32,730 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 12:13:32,737 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:13:32,737 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:13:32,738 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:13:32,738 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:13:32,738 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 12:13:32,738 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:13:32,741 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 12:13:32,742 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 12:13:32,743 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 12:13:32,745 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 12:13:32,746 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 12:13:32,746 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 12:13:32,750 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 12:13:32,751 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:13:32,751 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:13:32,754 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 12:13:32,755 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 12:13:32,755 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 12:13:32,758 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 12:13:32,759 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 12:13:32,759 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 12:13:32,769 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 12:13:32,770 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:13:32,770 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:13:32,775 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 12:13:32,775 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:13:32,776 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:13:32,777 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 12:13:32,778 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_date' in 'field list'
2023-01-20 12:13:32,778 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_date' in 'field list'
2023-01-20 12:13:32,779 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:13:32,779 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:13:32,780 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:13:32,799 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 12:13:32,800 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 12:17:01,842 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 12:17:01,844 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:17:01,845 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:17:01,851 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-20 12:17:01,851 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-20 12:17:01,852 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 12:17:01,852 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 12:17:01,857 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 10, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 11, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 12, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 13, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 12:17:01,857 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 12:17:01,859 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:17:01,859 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:17:01,860 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:17:01,860 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:17:01,860 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 12:17:01,861 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:17:01,864 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 12:17:01,864 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 12:17:01,865 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 12:17:01,868 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 12:17:01,869 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 12:17:01,869 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 12:17:01,874 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 12:17:01,875 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:17:01,875 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:17:01,879 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 12:17:01,879 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 12:17:01,880 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 12:17:01,884 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 12:17:01,884 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 12:17:01,885 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 12:17:01,896 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 12:17:01,897 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:17:01,897 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:17:01,901 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 12:17:01,902 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:17:01,903 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:17:01,903 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 12:17:01,904 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_date' in 'field list'
2023-01-20 12:17:01,905 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_date' in 'field list'
2023-01-20 12:17:01,905 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:17:01,906 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:17:01,906 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:17:01,925 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 12:17:01,926 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 12:20:18,537 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 12:20:18,539 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:20:18,540 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:20:18,545 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee_type.PRIMARY'
2023-01-20 12:20:18,546 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'employee_type.PRIMARY'
2023-01-20 12:20:18,547 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 12:20:18,548 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 12:20:18,552 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 10, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 11, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 12, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 13, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2, 
Employee ID = 14, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 15, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 12:20:18,552 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 12:20:18,554 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:20:18,554 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:20:18,555 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:20:18,555 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:20:18,556 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 12:20:18,556 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:20:18,559 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 12:20:18,559 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 12:20:18,560 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 12:20:18,563 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 12:20:18,563 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 12:20:18,564 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 12:20:18,567 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 12:20:18,567 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:20:18,568 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:20:18,571 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 12:20:18,571 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 12:20:18,572 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 12:20:18,575 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 12:20:18,575 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 12:20:18,576 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 12:20:18,587 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 12:20:18,588 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:20:18,588 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:20:18,593 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 12:20:18,594 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:20:18,594 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:20:18,595 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 12:20:18,596 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_date' in 'field list'
2023-01-20 12:20:18,597 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_date' in 'field list'
2023-01-20 12:20:18,597 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:20:18,598 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:20:18,598 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:20:18,617 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 12:20:18,618 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-20 12:23:35,184 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street']
2023-01-20 12:23:35,187 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:23:35,188 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '1234 Easy Street'
2023-01-20 12:23:35,192 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 12:23:35,192 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Clerk'
2023-01-20 12:23:35,197 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 12:23:35,197 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 12:23:35,203 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:23:35,204 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:23:35,204 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:23:35,205 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:23:35,205 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 12:23:35,205 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:23:35,209 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 12:23:35,210 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 12:23:35,210 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 12:23:35,213 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 12:23:35,213 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 12:23:35,214 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 12:23:35,218 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 12:23:35,219 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:23:35,219 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 12:23:35,222 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Ibuprofen']
2023-01-20 12:23:35,223 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 12:23:35,224 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 2, Category Name = 'Ibuprofen'
2023-01-20 12:23:35,228 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 12:23:35,228 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 99, Amount Taken = 1, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 12:23:35,229 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 100, Amount Taken = 2, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 12:23:35,239 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 12:23:35,240 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:23:35,240 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 12:23:35,245 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 12:23:35,245 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:23:35,246 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 12:23:35,247 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 12:23:35,249 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`appointment`, CONSTRAINT `fk_appointment_appointment_type1` FOREIGN KEY (`appointment_type_id`) REFERENCES `appointment_type` (`appointment_type_id`))
2023-01-20 12:23:35,250 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`appointment`, CONSTRAINT `fk_appointment_appointment_type1` FOREIGN KEY (`appointment_type_id`) REFERENCES `appointment_type` (`appointment_type_id`))
2023-01-20 12:23:35,250 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 12:23:35,250 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:23:35,251 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 0, Appointment Date = null, Customer ID = 0, Employee Id = 0, Appointment Type ID = 0
2023-01-20 12:33:13,423 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'field list'
2023-01-20 12:33:13,430 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:33:13,431 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type' in 'where clause'
2023-01-20 12:33:13,431 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:36:27,563 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type_name' in 'field list'
2023-01-20 12:36:27,569 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:36:27,569 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'appointment_type_name' in 'where clause'
2023-01-20 12:36:27,569 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 0, Appointment Type = 'null'
2023-01-20 12:39:40,683 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 12:39:40,685 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 12:47:09,610 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 12:47:09,612 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:47:09,612 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:47:57,091 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'customer.PRIMARY'
2023-01-20 12:47:57,093 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'customer.PRIMARY'
2023-01-20 12:47:57,099 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 12:47:57,099 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:47:57,100 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:53:07,297 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 12:53:07,299 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:53:07,300 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:53:07,306 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 12:53:07,307 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 12:55:42,303 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 12:55:42,305 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:55:42,306 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:55:42,312 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 12:55:42,313 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 12:55:42,321 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'employee.PRIMARY'
2023-01-20 12:55:42,321 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1]
2023-01-20 12:55:42,322 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 12:56:47,433 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 12:56:47,435 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:56:47,435 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 12:56:47,440 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 12:56:47,440 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 12:56:47,445 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 12:56:47,445 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:00:30,741 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:00:30,743 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:00:30,744 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:00:30,750 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:00:30,750 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:00:30,765 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:00:30,765 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:00:30,769 ERROR TEST_LOGGER [main] java.sql.SQLException: Column 'appointment_type' not found.
2023-01-20 13:00:30,769 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 13:00:30,770 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Recommendation'
2023-01-20 13:00:30,770 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:01:47,793 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:01:47,795 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:01:47,795 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:01:47,800 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:01:47,800 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:01:47,805 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:01:47,806 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:01:47,809 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Recommendation']
2023-01-20 13:01:47,809 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Recommendation'
2023-01-20 13:01:47,810 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:04:54,828 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:04:54,830 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:04:54,830 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:04:54,835 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:04:54,836 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:04:54,840 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:04:54,841 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:04:54,846 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:04:54,846 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:04:54,847 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:04:54,851 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:04:54,852 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:04:54,852 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:12:02,346 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:12:02,348 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:12:02,349 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:12:02,354 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:12:02,354 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:12:02,359 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:12:02,359 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:12:02,364 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:12:02,364 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:12:02,364 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:12:02,370 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'examination_type.PRIMARY'
2023-01-20 13:12:02,371 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'examination_type.PRIMARY'
2023-01-20 13:12:02,371 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:12:02,371 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:12:02,372 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:12:02,377 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:12:02,378 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:12:02,378 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:12:11,863 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:12:11,865 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:12:11,866 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:12:11,872 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:12:11,873 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:12:11,877 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:12:11,878 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:12:11,881 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:12:11,881 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:12:11,882 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:12:11,885 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:12:11,885 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:12:11,886 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:12:11,889 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:12:11,889 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:12:11,890 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:15:23,603 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:15:23,605 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:15:23,606 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:15:23,611 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:15:23,621 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:15:23,627 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:15:23,628 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:15:23,631 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:15:23,632 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:15:23,632 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:15:23,635 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:15:23,636 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:15:23,636 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:15:23,639 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:15:23,639 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:15:23,640 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:15:23,645 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:15:23,646 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:15:23,646 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:17:31,153 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:17:31,155 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:17:31,155 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:17:31,159 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:17:31,160 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:17:31,164 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:17:31,165 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:17:31,169 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:17:31,169 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:17:31,170 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:17:31,173 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:17:31,173 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:17:31,174 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:17:31,177 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:17:31,178 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:17:31,178 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:17:31,184 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'recipe.PRIMARY'
2023-01-20 13:17:31,185 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'recipe.PRIMARY'
2023-01-20 13:17:31,186 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:17:31,186 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:17:31,187 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:17:31,192 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:17:31,192 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:17:31,192 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:22:57,386 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:22:57,388 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:22:57,389 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:22:57,394 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:22:57,395 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:22:57,399 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:22:57,400 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:22:57,403 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:22:57,404 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:22:57,404 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:22:57,408 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:22:57,408 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:22:57,409 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:22:57,413 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:22:57,413 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:22:57,414 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:22:57,419 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:22:57,420 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:22:57,420 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:22:57,424 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:22:57,425 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:22:57,425 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:22:57,430 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 13:22:57,430 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 13:22:57,431 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 13:26:15,766 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:26:15,768 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:26:15,769 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:26:15,774 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:26:15,775 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:26:15,781 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:26:15,781 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:26:15,786 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:26:15,787 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:26:15,787 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:26:15,790 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:26:15,791 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:26:15,791 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:26:15,794 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:26:15,795 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:26:15,795 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:26:15,799 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:26:15,800 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:26:15,800 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:26:15,804 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:26:15,805 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:26:15,805 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:26:15,809 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 13:26:15,809 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 13:26:15,810 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 13:26:15,821 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 13:26:15,822 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:26:15,822 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:29:56,902 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:29:56,904 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:29:56,905 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:29:56,910 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:29:56,910 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:29:56,915 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:29:56,916 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:29:56,920 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:29:56,920 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:29:56,921 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:29:56,924 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:29:56,925 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:29:56,925 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:29:56,929 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:29:56,930 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:29:56,930 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:29:56,935 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:29:56,936 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:29:56,936 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:29:56,940 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:29:56,940 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:29:56,941 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:29:56,944 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 12.99]
2023-01-20 13:29:56,944 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 12.99
2023-01-20 13:29:56,945 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 13:29:56,955 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-20 13:29:56,955 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:29:56,956 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:29:56,961 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-20 13:29:56,961 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:29:56,962 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:29:56,962 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-20 13:35:21,923 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:35:21,925 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:35:21,926 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:35:21,930 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:35:21,930 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:35:21,935 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:35:21,936 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:35:21,939 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:35:21,940 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:35:21,940 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:35:21,943 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:35:21,944 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:35:21,945 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:35:21,948 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:35:21,949 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:35:21,949 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:35:21,953 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:35:21,954 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:35:21,954 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:35:21,958 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:35:21,959 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:35:21,959 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:35:21,964 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:35:21,964 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-20 13:35:21,965 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 13:35:21,966 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:35:21,967 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:35:21,981 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`customer_order`, CONSTRAINT `fk_Order_inventory1` FOREIGN KEY (`product_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:35:21,982 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1]
2023-01-20 13:35:21,982 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:35:21,983 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:35:21,986 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`prescription`, CONSTRAINT `fk_prescription_inventory1` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:35:21,987 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1]
2023-01-20 13:35:21,987 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:35:21,988 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:35:21,989 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-20 13:35:21,994 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-20 13:35:21,994 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:35:21,995 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:35:52,202 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:35:52,204 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:35:52,205 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:35:52,209 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:35:52,210 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:35:52,214 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:35:52,215 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:35:52,219 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:35:52,220 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:35:52,220 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:35:52,223 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:35:52,223 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:35:52,224 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:35:52,226 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:35:52,227 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:35:52,227 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:35:52,231 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:35:52,232 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:35:52,232 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:35:52,236 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:35:52,237 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:35:52,237 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:35:52,243 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:35:52,244 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-20 13:35:52,244 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 13:35:52,246 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 0, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-20 13:35:52,248 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:35:52,261 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`customer_order`, CONSTRAINT `fk_Order_inventory1` FOREIGN KEY (`product_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:35:52,262 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1]
2023-01-20 13:35:52,263 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:35:52,264 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:35:52,267 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`prescription`, CONSTRAINT `fk_prescription_inventory1` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:35:52,268 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1]
2023-01-20 13:35:52,269 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:35:52,270 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:35:52,270 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-20 13:35:52,275 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-20 13:35:52,275 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:35:52,276 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:48:05,920 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:48:05,921 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:48:05,922 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:48:05,926 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:48:05,927 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:48:05,931 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:48:05,932 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:48:05,936 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:48:05,936 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:48:05,936 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:48:05,939 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:48:05,940 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:48:05,940 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:48:05,943 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:48:05,944 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:48:05,944 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:48:05,948 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:48:05,949 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:48:05,949 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:48:05,953 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:48:05,953 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:48:05,954 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:48:05,958 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:48:05,958 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-20 13:48:05,959 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 13:48:05,960 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 0, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-20 13:48:05,961 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:48:05,975 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`customer_order`, CONSTRAINT `fk_Order_inventory1` FOREIGN KEY (`product_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:48:05,976 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1]
2023-01-20 13:48:05,976 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:48:05,977 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:48:05,981 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`prescription`, CONSTRAINT `fk_prescription_inventory1` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:48:05,982 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1]
2023-01-20 13:48:05,982 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:48:05,983 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:48:05,983 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-20 13:48:05,987 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-20 13:48:05,988 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:48:05,988 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:48:05,994 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-20 13:48:05,994 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2
2023-01-20 13:48:05,995 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'result' in 'where clause'
2023-01-20 13:48:05,995 MENU_LOG TEST_LOGGER [main] Testing out 
Examination ID = 0, Exam Result = 'null', Employee ID = 0, Examination Type ID = 0, Customer ID = 0
2023-01-20 13:49:00,131 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:49:00,133 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:49:00,133 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:49:00,139 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk', 
Employee Type ID = 2, Employee Type = 'Doctor']
2023-01-20 13:49:00,140 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:49:00,145 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-20 13:49:00,145 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-20 13:49:00,150 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-20 13:49:00,150 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-20 13:49:00,151 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-20 13:49:00,154 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type = 'COVID Test', 
Examination Type ID = 2, Examination Type = 'Measles Test']
2023-01-20 13:49:00,154 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type = 'COVID Test'
2023-01-20 13:49:00,155 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type = 'Measles Test'
2023-01-20 13:49:00,158 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-20 13:49:00,158 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-20 13:49:00,159 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-20 13:49:00,163 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 50.0, Medicine Name = 'Levofloxacin', 
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril']
2023-01-20 13:49:00,163 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:49:00,164 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0, Medicine Name = 'Genpril'
2023-01-20 13:49:00,168 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-20 13:49:00,168 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-20 13:49:00,169 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-20 13:49:00,173 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:49:00,174 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-20 13:49:00,174 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-20 13:49:00,176 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 0, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-20 13:49:00,177 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-20 13:49:00,190 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`customer_order`, CONSTRAINT `fk_Order_inventory1` FOREIGN KEY (`product_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:49:00,192 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1]
2023-01-20 13:49:00,192 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:49:00,193 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-20 13:49:00,196 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`prescription`, CONSTRAINT `fk_prescription_inventory1` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-20 13:49:00,197 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1]
2023-01-20 13:49:00,198 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:49:00,198 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-20 13:49:00,199 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-20 13:49:00,202 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-20 13:49:00,203 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:49:00,203 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-20 13:49:00,207 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-20 13:49:00,208 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2
2023-01-20 13:49:00,208 MENU_LOG TEST_LOGGER [main] Testing out 
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1
2023-01-20 13:54:22,981 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:54:22,983 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-20 13:54:22,984 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:54:22,987 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk']
2023-01-20 13:54:22,988 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:54:22,989 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 13:54:22,989 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 13:54:22,992 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 13:54:22,992 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk']
2023-01-20 13:54:22,992 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:55:20,913 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:55:20,914 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:55:20,915 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:55:20,918 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk']
2023-01-20 13:55:20,919 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:55:20,920 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-20 13:55:20,921 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 13:55:20,923 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 13:55:20,924 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 0, Employee Type = 'null'
2023-01-20 13:55:20,924 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-20 13:55:46,254 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-20 13:55:46,256 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:55:46,257 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-20 13:55:46,261 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type = 'Counter clerk']
2023-01-20 13:55:46,262 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type = 'Counter clerk'
2023-01-20 13:55:46,264 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1]
2023-01-20 13:55:46,265 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1
2023-01-20 13:55:46,268 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-20 13:55:46,269 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 0, Employee Type = 'null'
2023-01-20 13:55:46,269 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-21 17:44:35,036 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 17:44:35,048 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 17:44:35,048 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 17:44:35,056 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'employee_type_name' in 'field list'
2023-01-21 17:44:35,057 ERROR TEST_LOGGER [main] java.sql.SQLSyntaxErrorException: Unknown column 'employee_type_name' in 'field list'
2023-01-21 17:44:35,058 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-21 17:44:35,058 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 0, Employee Type Name = 'null'
2023-01-21 17:44:35,062 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`employee`, CONSTRAINT `fk_employee_employee_type1` FOREIGN KEY (`employee_type_id`) REFERENCES `employee_type` (`employee_type_id`))
2023-01-21 17:44:35,062 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-21 17:44:35,063 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-21 17:44:35,065 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-21 17:44:35,066 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 0, Employee Type Name = 'null'
2023-01-21 17:44:35,066 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-21 17:45:07,050 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 17:45:07,052 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 17:45:07,052 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 17:45:07,057 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type Name = 'Counter clerk']
2023-01-21 17:45:07,058 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type Name = 'Counter clerk'
2023-01-21 17:45:07,061 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1]
2023-01-21 17:45:07,062 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1
2023-01-21 17:45:07,066 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-21 17:45:07,066 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 0, Employee Type Name = 'null'
2023-01-21 17:45:07,067 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-21 17:45:16,964 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 17:45:16,966 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 17:45:16,967 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 1, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 17:45:16,971 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type Name = 'Counter clerk']
2023-01-21 17:45:16,972 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type Name = 'Counter clerk'
2023-01-21 17:45:16,975 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1]
2023-01-21 17:45:16,975 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1
2023-01-21 17:45:16,980 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 0, First Name = 'null', Last Name = 'null', Employee Number = 'null', Employee Type ID = 0
2023-01-21 17:45:16,980 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 0, Employee Type Name = 'null'
2023-01-21 17:45:16,981 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 0, First Name = 'null', Last Name = 'null', Phone Number = 'null', Age = 0, Address = 'null'
2023-01-21 18:16:14,116 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 18:16:14,118 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:16:14,119 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:16:14,124 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type Name = 'Counter clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 18:16:14,125 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type Name = 'Counter clerk'
2023-01-21 18:16:14,129 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 18:16:14,130 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-21 18:16:14,134 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-21 18:16:14,135 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-21 18:16:14,135 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-21 18:16:14,139 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 18:16:14,139 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type Name = 'COVID Test'
2023-01-21 18:16:14,140 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type Name = 'Measles Test'
2023-01-21 18:16:14,143 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 18:16:14,144 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-21 18:16:14,144 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-21 18:16:14,150 ERROR TEST_LOGGER [main] java.sql.SQLException: Field 'medicine_name' doesn't have a default value
2023-01-21 18:16:14,151 ERROR TEST_LOGGER [main] java.sql.SQLException: Field 'medicine_name' doesn't have a default value
2023-01-21 18:16:14,152 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-21 18:16:14,152 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 0, Recipe Size = 0.0
2023-01-21 18:16:14,152 ERROR TEST_LOGGER [main] java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
2023-01-21 18:16:14,152 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 0, Recipe Size = 0.0
2023-01-21 18:16:14,158 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-21 18:16:14,159 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-21 18:16:14,159 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-21 18:16:14,164 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:16:14,164 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:16:14,165 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-21 18:16:14,167 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 0, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:16:14,168 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:16:14,179 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`customer_order`, CONSTRAINT `fk_Order_inventory1` FOREIGN KEY (`product_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-21 18:16:14,180 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1]
2023-01-21 18:16:14,181 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:16:14,181 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:16:14,184 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`prescription`, CONSTRAINT `fk_prescription_recipe1` FOREIGN KEY (`recipe_id`) REFERENCES `recipe` (`recipe_id`))
2023-01-21 18:16:14,185 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`prescription`, CONSTRAINT `fk_prescription_inventory1` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-21 18:16:14,186 MENU_LOG TEST_LOGGER [main] Testing out get all []
2023-01-21 18:16:14,186 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-21 18:16:14,187 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-21 18:16:14,187 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-21 18:16:14,192 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 18:16:14,192 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:16:14,193 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:16:14,197 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 18:16:14,198 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2
2023-01-21 18:16:14,198 MENU_LOG TEST_LOGGER [main] Testing out 
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1
2023-01-21 18:18:25,903 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 18:18:25,905 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:18:25,906 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:18:25,912 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type Name = 'Counter clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 18:18:25,913 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type Name = 'Counter clerk'
2023-01-21 18:18:25,918 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 18:18:25,919 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-21 18:18:25,923 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-21 18:18:25,924 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-21 18:18:25,924 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-21 18:18:25,927 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 18:18:25,928 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type Name = 'COVID Test'
2023-01-21 18:18:25,928 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type Name = 'Measles Test'
2023-01-21 18:18:25,931 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 18:18:25,932 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-21 18:18:25,932 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-21 18:18:25,936 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 18:18:25,937 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0
2023-01-21 18:18:25,938 ERROR TEST_LOGGER [main] java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
2023-01-21 18:18:25,938 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 0, Recipe Size = 0.0
2023-01-21 18:18:25,942 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-21 18:18:25,942 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-21 18:18:25,943 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-21 18:18:25,948 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:18:25,949 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:18:25,949 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-21 18:18:25,951 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 0, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:18:25,952 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:18:25,965 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`customer_order`, CONSTRAINT `fk_Order_inventory1` FOREIGN KEY (`product_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-21 18:18:25,966 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1]
2023-01-21 18:18:25,967 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:18:25,967 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:18:25,971 ERROR TEST_LOGGER [main] java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`pharmacy`.`prescription`, CONSTRAINT `fk_prescription_inventory1` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`))
2023-01-21 18:18:25,972 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1]
2023-01-21 18:18:25,973 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:18:25,973 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:18:25,974 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 0, RX Number = 'null', Price Of Prescription = 0.0, Amount Of Medicine = 0, Date Filled = null, Customer ID = 0, Inventory ID = 0, Recipe ID = 0
2023-01-21 18:18:25,978 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 18:18:25,978 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:18:25,979 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:18:25,984 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 18:18:25,984 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2
2023-01-21 18:18:25,985 MENU_LOG TEST_LOGGER [main] Testing out 
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1
2023-01-21 18:22:41,708 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 18:22:41,710 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:22:41,710 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:22:41,716 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type Name = 'Counter clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 18:22:41,716 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type Name = 'Counter clerk'
2023-01-21 18:22:41,720 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 18:22:41,721 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-21 18:22:41,725 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-21 18:22:41,725 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-21 18:22:41,726 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-21 18:22:41,728 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 18:22:41,729 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type Name = 'COVID Test'
2023-01-21 18:22:41,729 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type Name = 'Measles Test'
2023-01-21 18:22:41,732 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 18:22:41,733 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-21 18:22:41,733 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-21 18:22:41,736 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 18:22:41,737 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0
2023-01-21 18:22:41,738 ERROR TEST_LOGGER [main] java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
2023-01-21 18:22:41,738 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 0, Recipe Size = 0.0
2023-01-21 18:22:41,742 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-21 18:22:41,742 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-21 18:22:41,743 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-21 18:22:41,747 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:22:41,748 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:22:41,748 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-21 18:22:41,749 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:22:41,749 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:22:41,760 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 18:22:41,760 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:22:41,761 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:22:41,765 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 18:22:41,765 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:22:41,766 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:22:41,767 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-21 18:22:41,770 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 18:22:41,771 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:22:41,771 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:22:41,776 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 18:22:41,776 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2
2023-01-21 18:22:41,777 MENU_LOG TEST_LOGGER [main] Testing out 
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1
2023-01-21 18:24:37,470 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 18:24:37,473 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:24:37,473 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:24:37,478 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type Name = 'Counter clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 18:24:37,478 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type Name = 'Counter clerk'
2023-01-21 18:24:37,483 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 18:24:37,484 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-21 18:24:37,488 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-21 18:24:37,489 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-21 18:24:37,489 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-21 18:24:37,492 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 18:24:37,492 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type Name = 'COVID Test'
2023-01-21 18:24:37,493 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type Name = 'Measles Test'
2023-01-21 18:24:37,496 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 18:24:37,497 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-21 18:24:37,497 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-21 18:24:37,500 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 18:24:37,500 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0
2023-01-21 18:24:37,501 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 0, Recipe Size = 0.0
2023-01-21 18:24:37,505 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-21 18:24:37,505 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-21 18:24:37,506 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-21 18:24:37,510 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:24:37,510 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:24:37,512 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-21 18:24:37,513 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:24:37,513 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:24:37,523 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 18:24:37,523 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:24:37,524 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:24:37,528 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 18:24:37,529 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:24:37,530 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:24:37,530 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-21 18:24:37,534 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 18:24:37,534 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:24:37,535 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:24:37,539 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 18:24:37,539 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2
2023-01-21 18:24:37,540 MENU_LOG TEST_LOGGER [main] Testing out 
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1
2023-01-21 18:27:18,251 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer ID = 1, First Name = 'Daniel', Last Name = 'Andrews', Phone Number = '12343234123', Age = 25, Address = '12 Main Ave', 
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road']
2023-01-21 18:27:18,253 MENU_LOG TEST_LOGGER [main] Testing out id
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:27:18,254 MENU_LOG TEST_LOGGER [main] Testing out last name
Customer ID = 2, First Name = 'Adam', Last Name = 'Jones', Phone Number = '5467896543', Age = 17, Address = '12 East Road'
2023-01-21 18:27:18,258 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee Type ID = 1, Employee Type Name = 'Counter clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 18:27:18,259 MENU_LOG TEST_LOGGER [main] Testing out id
Employee Type ID = 1, Employee Type Name = 'Counter clerk'
2023-01-21 18:27:18,264 MENU_LOG TEST_LOGGER [main] Testing out get all [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 18:27:18,265 MENU_LOG TEST_LOGGER [main] Testing out id
Employee ID = 2, First Name = 'Antonio', Last Name = 'Adams', Employee Number = '212344553', Employee Type ID = 2
2023-01-21 18:27:18,269 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation']
2023-01-21 18:27:18,269 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment Type ID = 2, Appointment Type Name = 'Clinic recommendation'
2023-01-21 18:27:18,270 MENU_LOG TEST_LOGGER [main] Testing out name
Appointment Type ID = 1, Appointment Type Name = 'Vaccine'
2023-01-21 18:27:18,273 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 18:27:18,273 MENU_LOG TEST_LOGGER [main] Testing out id
Examination Type ID = 1, Examination Type Name = 'COVID Test'
2023-01-21 18:27:18,274 MENU_LOG TEST_LOGGER [main] Testing out by name
Examination Type ID = 2, Examination Type Name = 'Measles Test'
2023-01-21 18:27:18,277 MENU_LOG TEST_LOGGER [main] Testing out get all [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 18:27:18,278 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 2, Payment Type = 'Credit Card'
2023-01-21 18:27:18,278 MENU_LOG TEST_LOGGER [main] Testing out id
Payment Type ID = 1, Payment Type = 'Cash'
2023-01-21 18:27:18,281 MENU_LOG TEST_LOGGER [main] Testing out get all [
Recipe ID = 1, Recipe Size = 20.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 18:27:18,282 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 2, Recipe Size = 100.0
2023-01-21 18:27:18,282 MENU_LOG TEST_LOGGER [main] Testing out id
Recipe ID = 0, Recipe Size = 0.0
2023-01-21 18:27:18,286 MENU_LOG TEST_LOGGER [main] Testing out get all [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'headache medicine']
2023-01-21 18:27:18,287 MENU_LOG TEST_LOGGER [main] Testing out id
Category ID = 1, Category Name = 'Antibiotic'
2023-01-21 18:27:18,287 MENU_LOG TEST_LOGGER [main] Testing out name
Category ID = 0, Category Name = 'null'
2023-01-21 18:27:18,292 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:27:18,293 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:27:18,293 MENU_LOG TEST_LOGGER [main] Testing out medicine name
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25
2023-01-21 18:27:18,294 MENU_LOG TEST_LOGGER [main] Testing out id
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99
2023-01-21 18:27:18,294 MENU_LOG TEST_LOGGER [main] Testing out get all [
Inventory ID = 1, Medicine Name = 'Advil', Amount Left = 2, Amount Taken = 100, Category ID = 2, Price Of Medicine = 8.25, 
Inventory ID = 2, Medicine Name = 'Amoxil', Amount Left = 1, Amount Taken = 99, Category ID = 1, Price Of Medicine = 13.99]
2023-01-21 18:27:18,304 MENU_LOG TEST_LOGGER [main] Testing out get all [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 2, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 18:27:18,305 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:27:18,305 MENU_LOG TEST_LOGGER [main] Testing out id
Customer Order ID = 1, Order Total = 18.25, Customer ID = 1, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1
2023-01-21 18:27:18,309 MENU_LOG TEST_LOGGER [main] Testing out get all [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 18:27:18,311 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:27:18,311 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1
2023-01-21 18:27:18,312 MENU_LOG TEST_LOGGER [main] Testing out id
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2
2023-01-21 18:27:18,315 MENU_LOG TEST_LOGGER [main] Testing out get all [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 18:27:18,316 MENU_LOG TEST_LOGGER [main] Testing out id
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:27:18,316 MENU_LOG TEST_LOGGER [main] Testing out 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1
2023-01-21 18:27:18,320 MENU_LOG TEST_LOGGER [main] Testing out get all [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 18:27:18,320 MENU_LOG TEST_LOGGER [main] Testing out id
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2
2023-01-21 18:27:18,321 MENU_LOG TEST_LOGGER [main] Testing out 
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1
2023-01-21 20:19:58,548 ERROR TEST_LOGGER [main] java.io.FileNotFoundException: D:\SolvdDev\Notes\PharmacyServiceTestsrc\main\resources\pharmacy.xml (The system cannot find the path specified)
2023-01-21 20:56:59,826 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 21:00:57,443 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 21:03:45,271 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type Name = 'Clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Recommendation']
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Recipe ID = 1, Recipe Size = 50.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Beta blocker']
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Inventory ID = 1, Medicine Name = 'Amoxil', Amount Left = 100, Amount Taken = 2, Category ID = 1, Price Of Medicine = 12.99, 
Inventory ID = 2, Medicine Name = 'Atenolol', Amount Left = 99, Amount Taken = 3, Category ID = 2, Price Of Medicine = 8.25]
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 0, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 0, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 21:03:45,273 MENU_LOG TEST_LOGGER [main] [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 21:03:45,274 MENU_LOG TEST_LOGGER [main] [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 21:03:45,274 MENU_LOG TEST_LOGGER [main] [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 21:04:43,087 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 21:04:43,088 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type Name = 'Clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 21:04:43,088 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 21:04:43,088 MENU_LOG TEST_LOGGER [main] [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Recommendation']
2023-01-21 21:04:43,088 MENU_LOG TEST_LOGGER [main] [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 21:04:43,088 MENU_LOG TEST_LOGGER [main] [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 21:04:43,088 MENU_LOG TEST_LOGGER [main] [
Recipe ID = 1, Recipe Size = 50.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 21:04:43,089 MENU_LOG TEST_LOGGER [main] [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Beta blocker']
2023-01-21 21:04:43,089 MENU_LOG TEST_LOGGER [main] [
Inventory ID = 1, Medicine Name = 'Amoxil', Amount Left = 100, Amount Taken = 2, Category ID = 1, Price Of Medicine = 12.99, 
Inventory ID = 2, Medicine Name = 'Atenolol', Amount Left = 99, Amount Taken = 3, Category ID = 2, Price Of Medicine = 8.25]
2023-01-21 21:04:43,089 MENU_LOG TEST_LOGGER [main] [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 0, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 0, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 21:04:43,089 MENU_LOG TEST_LOGGER [main] [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 21:04:43,089 MENU_LOG TEST_LOGGER [main] [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 21:04:43,089 MENU_LOG TEST_LOGGER [main] [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 23:03:16,890 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 23:03:16,892 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type Name = 'Clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 23:03:16,892 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 23:03:16,892 MENU_LOG TEST_LOGGER [main] [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Recommendation']
2023-01-21 23:03:16,892 MENU_LOG TEST_LOGGER [main] [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 23:03:16,892 MENU_LOG TEST_LOGGER [main] [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 23:03:16,893 MENU_LOG TEST_LOGGER [main] [
Recipe ID = 1, Recipe Size = 50.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 23:03:16,893 MENU_LOG TEST_LOGGER [main] [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Beta blocker']
2023-01-21 23:03:16,893 MENU_LOG TEST_LOGGER [main] [
Inventory ID = 1, Medicine Name = 'Amoxil', Amount Left = 100, Amount Taken = 2, Category ID = 1, Price Of Medicine = 12.99, 
Inventory ID = 2, Medicine Name = 'Atenolol', Amount Left = 99, Amount Taken = 3, Category ID = 2, Price Of Medicine = 8.25]
2023-01-21 23:03:16,893 MENU_LOG TEST_LOGGER [main] [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 0, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 0, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 23:03:16,893 MENU_LOG TEST_LOGGER [main] [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 23:03:16,893 MENU_LOG TEST_LOGGER [main] [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 23:03:16,893 MENU_LOG TEST_LOGGER [main] [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 23:04:01,295 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 23:04:01,296 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type Name = 'Clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Recommendation']
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Recipe ID = 1, Recipe Size = 50.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Beta blocker']
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Inventory ID = 1, Medicine Name = 'Amoxil', Amount Left = 100, Amount Taken = 2, Category ID = 1, Price Of Medicine = 12.99, 
Inventory ID = 2, Medicine Name = 'Atenolol', Amount Left = 99, Amount Taken = 3, Category ID = 2, Price Of Medicine = 8.25]
2023-01-21 23:04:01,297 MENU_LOG TEST_LOGGER [main] [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 0, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 0, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 23:04:01,298 MENU_LOG TEST_LOGGER [main] [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 23:04:01,298 MENU_LOG TEST_LOGGER [main] [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 23:04:01,298 MENU_LOG TEST_LOGGER [main] [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 23:05:46,340 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 23:05:46,342 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type Name = 'Clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 23:05:46,342 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 23:05:46,342 MENU_LOG TEST_LOGGER [main] [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Recommendation']
2023-01-21 23:05:46,342 MENU_LOG TEST_LOGGER [main] [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 23:05:46,342 MENU_LOG TEST_LOGGER [main] [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 23:05:46,342 MENU_LOG TEST_LOGGER [main] [
Recipe ID = 1, Recipe Size = 50.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 23:05:46,343 MENU_LOG TEST_LOGGER [main] [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Beta blocker']
2023-01-21 23:05:46,343 MENU_LOG TEST_LOGGER [main] [
Inventory ID = 1, Medicine Name = 'Amoxil', Amount Left = 100, Amount Taken = 2, Category ID = 1, Price Of Medicine = 12.99, 
Inventory ID = 2, Medicine Name = 'Atenolol', Amount Left = 99, Amount Taken = 3, Category ID = 2, Price Of Medicine = 8.25]
2023-01-21 23:05:46,343 MENU_LOG TEST_LOGGER [main] [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 0, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 0, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 23:05:46,343 MENU_LOG TEST_LOGGER [main] [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 23:05:46,343 MENU_LOG TEST_LOGGER [main] [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 23:05:46,343 MENU_LOG TEST_LOGGER [main] [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 23:06:56,628 MENU_LOG TEST_LOGGER [main] [
Customer ID = 1, First Name = 'Sam', Last Name = 'Martino', Phone Number = '2345643212', Age = 23, Address = '12 Easy Street', 
Customer ID = 2, First Name = 'Nugget', Last Name = 'Lost', Phone Number = '9742123468', Age = 18, Address = '15 Mac Road']
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Employee Type ID = 1, Employee Type Name = 'Clerk', 
Employee Type ID = 2, Employee Type Name = 'Doctor']
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Employee ID = 1, First Name = 'Michael', Last Name = 'Morris', Employee Number = '123443223', Employee Type ID = 1, 
Employee ID = 2, First Name = 'Antonio', Last Name = 'Mayor', Employee Number = '212344553', Employee Type ID = 2]
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Appointment Type ID = 1, Appointment Type Name = 'Vaccine', 
Appointment Type ID = 2, Appointment Type Name = 'Recommendation']
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Examination Type ID = 1, Examination Type Name = 'COVID Test', 
Examination Type ID = 2, Examination Type Name = 'Measles Test']
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Payment Type ID = 1, Payment Type = 'Cash', 
Payment Type ID = 2, Payment Type = 'Credit Card']
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Recipe ID = 1, Recipe Size = 50.0, 
Recipe ID = 2, Recipe Size = 100.0]
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Category ID = 1, Category Name = 'Antibiotic', 
Category ID = 2, Category Name = 'Beta blocker']
2023-01-21 23:06:56,630 MENU_LOG TEST_LOGGER [main] [
Inventory ID = 1, Medicine Name = 'Amoxil', Amount Left = 100, Amount Taken = 2, Category ID = 1, Price Of Medicine = 12.99, 
Inventory ID = 2, Medicine Name = 'Atenolol', Amount Left = 99, Amount Taken = 3, Category ID = 2, Price Of Medicine = 8.25]
2023-01-21 23:06:56,631 MENU_LOG TEST_LOGGER [main] [
Customer Order ID = 1, Order Total = 18.25, Customer ID = 0, Order Date = 2022-12-24, Payment Type ID=1, Product ID = 1, 
Customer Order ID = 2, Order Total = 13.57, Customer ID = 0, Order Date = 2023-01-19, Payment Type ID=2, Product ID = 2]
2023-01-21 23:06:56,631 MENU_LOG TEST_LOGGER [main] [
Prescription ID = 1, RX Number = '1234543', Price Of Prescription = 25.13, Amount Of Medicine = 50, Date Filled = 2022-12-26, Customer ID = 1, Inventory ID = 1, Recipe ID = 1, 
Prescription ID = 2, RX Number = '12343432', Price Of Prescription = 30.79, Amount Of Medicine = 100, Date Filled = 2023-01-20, Customer ID = 2, Inventory ID = 2, Recipe ID = 2]
2023-01-21 23:06:56,631 MENU_LOG TEST_LOGGER [main] [
Appointment ID = 1, Appointment Date = 2022-12-27, Customer ID = 1, Employee Id = 2, Appointment Type ID = 1, 
Appointment ID = 2, Appointment Date = 2023-01-03, Customer ID = 2, Employee Id = 2, Appointment Type ID = 1]
2023-01-21 23:06:56,631 MENU_LOG TEST_LOGGER [main] [
Examination ID = 1, Exam Result = 'Negative', Employee ID = 2, Examination Type ID = 1, Customer ID = 1, 
Examination ID = 2, Exam Result = 'Positive', Employee ID = 2, Examination Type ID = 2, Customer ID = 2]
2023-01-21 23:14:01,652 ERROR TEST_LOGGER [main] javax.xml.bind.MarshalException
 - with linked exception:
[com.sun.istack.SAXException2: unable to marshal type "com.solvd.pharmacyservice.models.Pharmacy" as an element because it is missing an @XmlRootElement annotation]
2023-01-21 23:18:36,694 MENU_LOG TEST_LOGGER [main] Marshalling complete
2023-01-21 23:20:21,434 MENU_LOG TEST_LOGGER [main] Marshalling complete
